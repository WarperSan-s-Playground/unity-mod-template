env:
  DOTNET_VERSION: '8.0.x' # dotnet msbuild . -getProperty:_RuntimePackInWorkloadVersionCurrent
  DOTNET_CONFIGURATION: 'Release'

name: Build

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write
  actions: write

jobs:
  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      # Fetches the latest version of the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Sets up the .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Sets up the project
      - name: Clean Project
        run: dotnet clean

      - name: Restore Dependencies
        run: dotnet restore --locked-mode

      - name: Find Target Framework
        run: echo "DOTNET_FRAMEWORK=$(dotnet msbuild . -getProperty:TargetFramework)" >> $GITHUB_ENV

      # Build Project
      - name: Build Project
        run: dotnet build --no-restore --configuration ${{ env.DOTNET_CONFIGURATION }}

      - name: Clean Output
        run: |
          cd "./bin/${{ env.DOTNET_CONFIGURATION }}/${{ env.DOTNET_FRAMEWORK }}"
          rm -f *.deps.json *.pdb
          cd -

      - name: Compile Metadata
        run: |
          PROPERTIES=(
            "product=Product"
            "author=Authors"
            "version=Version"
            "description=Description"
          )
          
          for property in "${PROPERTIES[@]}" ; do
            OUTPUT_KEY="${property%%=*}"
            INPUT_KEY="${property##*=}"
            OUTPUT_VALUE=$(dotnet msbuild . -getProperty:${INPUT_KEY})
          
            echo "${OUTPUT_KEY}=${OUTPUT_VALUE}" >> metadata.env
          done
      
      # Upload Project
      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./bin/${{ env.DOTNET_CONFIGURATION }}/${{ env.DOTNET_FRAMEWORK }}

      - name: Upload Metadata
        uses: actions/upload-artifact@v4
        with:
          name: metadata
          path: metadata.env