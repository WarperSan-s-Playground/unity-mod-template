env:
  DOTNET_VERSION: '8.x'
  DOTNET_FRAMEWORK: 'netstandard2.1'
  DOTNET_CONFIGURATION: 'Release'

name: Release New Version

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Clean Project
        run: dotnet clean

      - name: Restore Dependencies
        run: dotnet restore --locked-mode

      - name: Build Project
        run: dotnet build --no-restore --configuration ${{ env.DOTNET_CONFIGURATION }}

      - name: Clean Output
        run: |
          cd "./bin/${{ env.DOTNET_CONFIGURATION }}/${{ env.DOTNET_FRAMEWORK }}"
          rm -f *.deps.json *.pdb

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ./bin/${{ env.DOTNET_CONFIGURATION }}/${{ env.DOTNET_FRAMEWORK }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v5
        with:
          name: build-output
          path: release-files/
      
      - name: Generate Release Details
        run: |
          RELEASE_VERSION="${GITHUB_REF#refs/tags/}"
          RELEASE_NAME="${GITHUB_REPOSITORY##*/}_${RELEASE_VERSION}"
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Zip Build Artifacts
        run: |
          cd release-files
          zip -r "../${{ env.RELEASE_NAME }}.zip" .

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: v${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          files: ${{ env.RELEASE_NAME }}.zip
